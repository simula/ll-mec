/**
* Mp1 API
* The ETSI MEC ISG MEC011 Application Enablement API described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* Contact: cti_support@etsi.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* SubscriptionsApiImpl.h
*
* 
*/

#ifndef SUBSCRIPTIONS_API_IMPL_H_
#define SUBSCRIPTIONS_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <SubscriptionsApi.h>

#include <pistache/optional.h>

#include "Mp1SubscriptionLinkList.h"
#include "ProblemDetails.h"
#include "SerAvailabilityNotificationSubscription.h"
#include "NotificationSubscription.h"
#include <string>
#include "rib.h"
#include "json.h"
#include "subscription.h"

namespace llmec {
namespace mp1 {
namespace api {

using namespace llmec::mp1::model;
using json = nlohmann::json;

class SubscriptionsApiImpl : public llmec::mp1::api::SubscriptionsApi {
public:
    SubscriptionsApiImpl(std::shared_ptr<Pistache::Rest::Router>,
                         llmec::mp1::rib::Rib& rib,
                         llmec::event::subscription& ev);
    ~SubscriptionsApiImpl() {}
    /*
     * Callback function
     * @param [serviceInfo] service's info
     * @param [evType] Type of Service's event
     */
    void event_callback (json serviceInfo, llmec::mp1::rib::meMp1SubscriptionType evType);


    void applications_subscription_delete(const std::string &appInstanceId, const std::string &subscriptionType, const std::string &subscriptionId, Pistache::Http::ResponseWriter &response);
    void applications_subscription_get(const std::string &appInstanceId, const std::string &subscriptionType, const std::string &subscriptionId, Pistache::Http::ResponseWriter &response);
    void applications_subscriptions_get(const std::string &appInstanceId, Pistache::Http::ResponseWriter &response);
    void applications_subscriptions_post(const std::string &appInstanceId, const NotificationSubscription &body, Pistache::Http::ResponseWriter &response);
private:
        llmec::mp1::rib::Rib& m_rib;
        llmec::event::subscription& m_event_sub;
};

}
}
}



#endif
