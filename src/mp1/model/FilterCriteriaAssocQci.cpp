/**
* MP1 API
* The ETSI MEC ISG MEC012 Radio Network Information API, AND The ETSI MEC ISG MEC011 Application Enablement API
* AND some additional MEC APIs described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FilterCriteriaAssocQci.h"

namespace llmec {
namespace mp1 {
namespace model {

FilterCriteriaAssocQci::FilterCriteriaAssocQci()
{
    m_AppInsId = "";
    m_AppInsIdIsSet = false;
    m_AssociateIdIsSet = false;
    m_PlmnIsSet = false;
    m_CellIdIsSet = false;
    m_Qci = 0;
    m_QciIsSet = false;
    
}

FilterCriteriaAssocQci::~FilterCriteriaAssocQci()
{
}

void FilterCriteriaAssocQci::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const FilterCriteriaAssocQci& o)
{
    j = nlohmann::json();
    if(o.appInsIdIsSet())
        j["appInsId"] = o.m_AppInsId;
    if(o.associateIdIsSet())
        j["associateId"] = o.m_AssociateId;
    if(o.plmnIsSet())
        j["plmn"] = o.m_Plmn;
    if(o.cellIdIsSet())
        j["cellId"] = o.m_CellId;
    if(o.qciIsSet())
        j["qci"] = o.m_Qci;
}

void from_json(const nlohmann::json& j, FilterCriteriaAssocQci& o)
{
    if(j.contains("appInsId"))
    {
        j.at("appInsId").get_to(o.m_AppInsId);
        o.m_AppInsIdIsSet = true;
    } 
    if(j.contains("associateId"))
    {
        j.at("associateId").get_to(o.m_AssociateId);
        o.m_AssociateIdIsSet = true;
    } 
    if(j.contains("plmn"))
    {
        j.at("plmn").get_to(o.m_Plmn);
        o.m_PlmnIsSet = true;
    } 
    if(j.contains("cellId"))
    {
        j.at("cellId").get_to(o.m_CellId);
        o.m_CellIdIsSet = true;
    } 
    if(j.contains("qci"))
    {
        j.at("qci").get_to(o.m_Qci);
        o.m_QciIsSet = true;
    } 
}

std::string FilterCriteriaAssocQci::getAppInsId() const
{
    return m_AppInsId;
}
void FilterCriteriaAssocQci::setAppInsId(std::string const& value)
{
    m_AppInsId = value;
    m_AppInsIdIsSet = true;
}
bool FilterCriteriaAssocQci::appInsIdIsSet() const
{
    return m_AppInsIdIsSet;
}
void FilterCriteriaAssocQci::unsetAppInsId()
{
    m_AppInsIdIsSet = false;
}
AssociateId FilterCriteriaAssocQci::getAssociateId() const
{
    return m_AssociateId;
}
void FilterCriteriaAssocQci::setAssociateId(AssociateId const& value)
{
    m_AssociateId = value;
    m_AssociateIdIsSet = true;
}
bool FilterCriteriaAssocQci::associateIdIsSet() const
{
    return m_AssociateIdIsSet;
}
void FilterCriteriaAssocQci::unsetAssociateId()
{
    m_AssociateIdIsSet = false;
}
Plmn FilterCriteriaAssocQci::getPlmn() const
{
    return m_Plmn;
}
void FilterCriteriaAssocQci::setPlmn(Plmn const& value)
{
    m_Plmn = value;
    m_PlmnIsSet = true;
}
bool FilterCriteriaAssocQci::plmnIsSet() const
{
    return m_PlmnIsSet;
}
void FilterCriteriaAssocQci::unsetPlmn()
{
    m_PlmnIsSet = false;
}
std::vector<std::string>& FilterCriteriaAssocQci::getCellId()
{
    return m_CellId;
}
bool FilterCriteriaAssocQci::cellIdIsSet() const
{
    return m_CellIdIsSet;
}
void FilterCriteriaAssocQci::unsetCellId()
{
    m_CellIdIsSet = false;
}
int32_t FilterCriteriaAssocQci::getQci() const
{
    return m_Qci;
}
void FilterCriteriaAssocQci::setQci(int32_t const value)
{
    m_Qci = value;
    m_QciIsSet = true;
}
bool FilterCriteriaAssocQci::qciIsSet() const
{
    return m_QciIsSet;
}
void FilterCriteriaAssocQci::unsetQci()
{
    m_QciIsSet = false;
}

}
}
}

