/**
* MP1 API
* The ETSI MEC ISG MEC012 Radio Network Information API, AND The ETSI MEC ISG MEC011 Application Enablement API
* AND some additional MEC APIs described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "S1BearerInfo.h"

namespace llmec {
namespace mp1 {
namespace model {

S1BearerInfo::S1BearerInfo()
{
    m_TimeStampIsSet = false;
    
}

S1BearerInfo::~S1BearerInfo()
{
}

void S1BearerInfo::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const S1BearerInfo& o)
{
    j = nlohmann::json();
    if(o.timeStampIsSet())
        j["timeStamp"] = o.m_TimeStamp;
    j["s1UeInfo"] = o.m_S1UeInfo;
}

void from_json(const nlohmann::json& j, S1BearerInfo& o)
{
    if(j.contains("timeStamp"))
    {
        j.at("timeStamp").get_to(o.m_TimeStamp);
        o.m_TimeStampIsSet = true;
    } 
    j.at("s1UeInfo").get_to(o.m_S1UeInfo);
}

TimeStamp S1BearerInfo::getTimeStamp() const
{
    return m_TimeStamp;
}
void S1BearerInfo::setTimeStamp(TimeStamp const& value)
{
    m_TimeStamp = value;
    m_TimeStampIsSet = true;
}
bool S1BearerInfo::timeStampIsSet() const
{
    return m_TimeStampIsSet;
}
void S1BearerInfo::unsetTimeStamp()
{
    m_TimeStampIsSet = false;
}
std::vector<S1UeInfo>& S1BearerInfo::getS1UeInfo()
{
    return m_S1UeInfo;
}

}
}
}

