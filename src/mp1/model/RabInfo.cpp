/**
* MP1 API
* The ETSI MEC ISG MEC012 Radio Network Information API, AND The ETSI MEC ISG MEC011 Application Enablement API
* AND some additional MEC APIs described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "RabInfo.h"

namespace llmec {
namespace mp1 {
namespace model {

RabInfo::RabInfo()
{
    m_TimeStampIsSet = false;
    m_AppInsId = "";
    m_RequestId = "";
    m_CellUserInfoIsSet = false;
    
}

RabInfo::~RabInfo()
{
}

void RabInfo::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const RabInfo& o)
{
    j = nlohmann::json();
    if(o.timeStampIsSet())
        j["timeStamp"] = o.m_TimeStamp;
    j["appInsId"] = o.m_AppInsId;
    j["requestId"] = o.m_RequestId;
    if(o.cellUserInfoIsSet())
        j["cellUserInfo"] = o.m_CellUserInfo;
}

void from_json(const nlohmann::json& j, RabInfo& o)
{
    if(j.contains("timeStamp"))
    {
        j.at("timeStamp").get_to(o.m_TimeStamp);
        o.m_TimeStampIsSet = true;
    } 
    j.at("appInsId").get_to(o.m_AppInsId);
    j.at("requestId").get_to(o.m_RequestId);
    if(j.contains("cellUserInfo"))
    {
        j.at("cellUserInfo").get_to(o.m_CellUserInfo);
        o.m_CellUserInfoIsSet = true;
    } 
}

TimeStamp RabInfo::getTimeStamp() const
{
    return m_TimeStamp;
}
void RabInfo::setTimeStamp(TimeStamp const& value)
{
    m_TimeStamp = value;
    m_TimeStampIsSet = true;
}
bool RabInfo::timeStampIsSet() const
{
    return m_TimeStampIsSet;
}
void RabInfo::unsetTimeStamp()
{
    m_TimeStampIsSet = false;
}
std::string RabInfo::getAppInsId() const
{
    return m_AppInsId;
}
void RabInfo::setAppInsId(std::string const& value)
{
    m_AppInsId = value;
    
}
std::string RabInfo::getRequestId() const
{
    return m_RequestId;
}
void RabInfo::setRequestId(std::string const& value)
{
    m_RequestId = value;
    
}
std::vector<CellUserInfo>& RabInfo::getCellUserInfo()
{
    return m_CellUserInfo;
}
bool RabInfo::cellUserInfoIsSet() const
{
    return m_CellUserInfoIsSet;
}
void RabInfo::unsetCellUserInfo()
{
    m_CellUserInfoIsSet = false;
}

}
}
}

