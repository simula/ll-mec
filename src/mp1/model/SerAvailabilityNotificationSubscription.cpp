/**
* Mp1 API
* The ETSI MEC ISG MEC011 Application Enablement API described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* Contact: cti_support@etsi.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SerAvailabilityNotificationSubscription.h"

namespace llmec {
namespace mp1 {
namespace model {

SerAvailabilityNotificationSubscription::SerAvailabilityNotificationSubscription(): NotificationSubscription()
{
   // m_SubscriptionType = "";
    //m_CallbackReference = "";
    
}

SerAvailabilityNotificationSubscription::~SerAvailabilityNotificationSubscription()
{
}
/*
void SerAvailabilityNotificationSubscription::validate()
{
    // TODO: implement validation
}
*/
void to_json(nlohmann::json& j, const SerAvailabilityNotificationSubscription& o)
{
    j = nlohmann::json();
    j["subscriptionType"] = o.m_SubscriptionType;
    j["callbackReference"] = o.m_CallbackReference;
    j["_links"] = o.m__links;
    j["filteringCriteria"] = o.m_FilteringCriteria;
}

void from_json(const nlohmann::json& j, SerAvailabilityNotificationSubscription& o)
{
    j.at("subscriptionType").get_to(o.m_SubscriptionType);
    j.at("callbackReference").get_to(o.m_CallbackReference);
    j.at("_links").get_to(o.m__links);
    j.at("filteringCriteria").get_to(o.m_FilteringCriteria);
}
/*
std::string SerAvailabilityNotificationSubscription::getSubscriptionType() const
{
    return m_SubscriptionType;
}
void SerAvailabilityNotificationSubscription::setSubscriptionType(std::string const& value)
{
    m_SubscriptionType = value;
    
}
std::string SerAvailabilityNotificationSubscription::getCallbackReference() const
{
    return m_CallbackReference;
}
void SerAvailabilityNotificationSubscription::setCallbackReference(std::string const& value)
{
    m_CallbackReference = value;
    
}
Self SerAvailabilityNotificationSubscription::getLinks() const
{
    return m__links;
}
void SerAvailabilityNotificationSubscription::setLinks(Self const& value)
{
    m__links = value;
    
}
*/
ServiceInfo SerAvailabilityNotificationSubscription::getFilteringCriteria() const
{
    return m_FilteringCriteria;
}
void SerAvailabilityNotificationSubscription::setFilteringCriteria(ServiceInfo const& value)
{
    m_FilteringCriteria = value;
    
}

}
}
}

