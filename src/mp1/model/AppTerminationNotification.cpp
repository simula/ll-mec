/**
* Mp1 API
* The ETSI MEC ISG MEC011 Application Enablement API described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* Contact: cti_support@etsi.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AppTerminationNotification.h"

namespace llmec {
namespace mp1 {
namespace model {

AppTerminationNotification::AppTerminationNotification()
{
    m_NotificationType = "";
    m_MaxGracefulTimeout = 0;
    
}

AppTerminationNotification::~AppTerminationNotification()
{
}

void AppTerminationNotification::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const AppTerminationNotification& o)
{
    j = nlohmann::json();
    j["notificationType"] = o.m_NotificationType;
    j["maxGracefulTimeout"] = o.m_MaxGracefulTimeout;
    j["_links"] = o.m__links;
}

void from_json(const nlohmann::json& j, AppTerminationNotification& o)
{
    j.at("notificationType").get_to(o.m_NotificationType);
    j.at("maxGracefulTimeout").get_to(o.m_MaxGracefulTimeout);
    j.at("_links").get_to(o.m__links);
}

std::string AppTerminationNotification::getNotificationType() const
{
    return m_NotificationType;
}
void AppTerminationNotification::setNotificationType(std::string const& value)
{
    m_NotificationType = value;
    
}
int32_t AppTerminationNotification::getMaxGracefulTimeout() const
{
    return m_MaxGracefulTimeout;
}
void AppTerminationNotification::setMaxGracefulTimeout(int32_t const value)
{
    m_MaxGracefulTimeout = value;
    
}
Subscription AppTerminationNotification::getLinks() const
{
    return m__links;
}
void AppTerminationNotification::setLinks(Subscription const& value)
{
    m__links = value;
    
}

}
}
}

