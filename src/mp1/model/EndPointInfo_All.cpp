/**
* MP1 API
* The ETSI MEC ISG MEC012 Radio Network Information API, AND The ETSI MEC ISG MEC011 Application Enablement API
* AND some additional MEC APIs described using OpenAPI
*
* The version of the OpenAPI document: 1.1.1
* Contact: cti_support@etsi.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "EndPointInfo_All.h"

namespace llmec {
namespace mp1 {
namespace model {

EndPointInfo_All::EndPointInfo_All()
{
    m_UrisIsSet = false;
    m_AddressesIsSet = false;
    
}

EndPointInfo_All::~EndPointInfo_All()
{
}

void EndPointInfo_All::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const EndPointInfo_All& o)
{
    j = nlohmann::json();
    if(o.urisIsSet())
        j["uris"] = o.m_Uris;
    if(o.addressesIsSet())
        j["addresses"] = o.m_Addresses;
}

void from_json(const nlohmann::json& j, EndPointInfo_All& o)
{
    if(j.contains("uris"))
    {
        j.at("uris").get_to(o.m_Uris);
        o.m_UrisIsSet = true;
    } 
    if(j.contains("addresses"))
    {
        j.at("addresses").get_to(o.m_Addresses);
        o.m_AddressesIsSet = true;
    } 
}

std::vector<std::string>& EndPointInfo_All::getUris()
{
    return m_Uris;
}
bool EndPointInfo_All::urisIsSet() const
{
    return m_UrisIsSet;
}
void EndPointInfo_All::unsetUris()
{
    m_UrisIsSet = false;
}
std::vector<EndPointInfo_Address>& EndPointInfo_All::getAddresses()
{
    return m_Addresses;
}
bool EndPointInfo_All::addressesIsSet() const
{
    return m_AddressesIsSet;
}
void EndPointInfo_All::unsetAddresses()
{
    m_AddressesIsSet = false;
}

}
}
}

