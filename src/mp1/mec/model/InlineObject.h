/**
* MEC Platform
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Inline_object.h
 *
 * 
 */

#ifndef Inline_object_H_
#define Inline_object_H_


#include "ModelBase.h"

#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Inline_object
    : public ModelBase
{
public:
    Inline_object();
    virtual ~Inline_object();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// Inline_object members

    /// <summary>
    /// All DNS requests from UEs for this name will be resolved to the IP address of a specific MEC application instance.
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string const& value);
        /// <summary>
    /// The IP address of the MEC application instance to which traffic will be redirected.
    /// </summary>
    std::string getMecIpaddr() const;
    void setMecIpaddr(std::string const& value);
        /// <summary>
    /// The IP address of the MEC application instance to which traffic will be redirected.
    /// </summary>
    std::string getMecMacaddr() const;
    void setMecMacaddr(std::string const& value);
    bool mecMacaddrIsSet() const;
    void unsetMec_macaddr();
    /// <summary>
    /// The type of redirection. Should have the values *2* or *3*. (This field is reserved and is not used in this version. However, it has to have a valid value.)
    /// </summary>
    int32_t getType() const;
    void setType(int32_t const value);
    
protected:
    std::string m_Url;

    std::string m_Mec_ipaddr;

    std::string m_Mec_macaddr;
    bool m_Mec_macaddrIsSet;
    int32_t m_Type;

};

}
}
}
}

#endif /* Inline_object_H_ */
