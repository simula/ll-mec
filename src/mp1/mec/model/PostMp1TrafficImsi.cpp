/**
* MEC Platform
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: undefined
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Post_mp1_traffic_imsi.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Post_mp1_traffic_imsi::Post_mp1_traffic_imsi()
{
    m_Service_ip = "";
    m_Port = 0;
    m_Transport = 0;
    m_Mec_ipaddr = "";
    m_Mec_macaddr = "";
    m_Type = 0;
    
}

Post_mp1_traffic_imsi::~Post_mp1_traffic_imsi()
{
}

void Post_mp1_traffic_imsi::validate()
{
    // TODO: implement validation
}

nlohmann::json Post_mp1_traffic_imsi::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    {
        nlohmann::json jsonArray;
        for( const auto& item : m_Ue_list )
        {
            jsonArray.push_back(ModelBase::toJson(item));
        }
        val["ue_list"] = jsonArray;
        
    }
    val["service_ip"] = ModelBase::toJson(m_Service_ip);
    val["port"] = m_Port;
    val["transport"] = m_Transport;
    val["mec_ipaddr"] = ModelBase::toJson(m_Mec_ipaddr);
    val["mec_macaddr"] = ModelBase::toJson(m_Mec_macaddr);
    val["type"] = m_Type;
    

    return val;
}

void Post_mp1_traffic_imsi::fromJson(const nlohmann::json& val)
{
    {
        m_Ue_list.clear();
                    for( const auto& item : val["ue_list"] )
            {
                m_Ue_list.push_back(item);
                
            }
    }
    setServiceIp(val.at("service_ip"));
    setPort(val.at("port"));
    setTransport(val.at("transport"));
    setMecIpaddr(val.at("mec_ipaddr"));
    setMecMacaddr(val.at("mec_macaddr"));
    setType(val.at("type"));
    
}


std::vector<std::string>& Post_mp1_traffic_imsi::getUeList()
{
    return m_Ue_list;
}
std::string Post_mp1_traffic_imsi::getServiceIp() const
{
    return m_Service_ip;
}
void Post_mp1_traffic_imsi::setServiceIp(std::string const& value)
{
    m_Service_ip = value;
    
}
int32_t Post_mp1_traffic_imsi::getPort() const
{
    return m_Port;
}
void Post_mp1_traffic_imsi::setPort(int32_t const value)
{
    m_Port = value;
    
}
int32_t Post_mp1_traffic_imsi::getTransport() const
{
    return m_Transport;
}
void Post_mp1_traffic_imsi::setTransport(int32_t const value)
{
    m_Transport = value;
    
}
std::string Post_mp1_traffic_imsi::getMecIpaddr() const
{
    return m_Mec_ipaddr;
}
void Post_mp1_traffic_imsi::setMecIpaddr(std::string const& value)
{
    m_Mec_ipaddr = value;
    
}
std::string Post_mp1_traffic_imsi::getMecMacaddr() const
{
    return m_Mec_macaddr;
}
void Post_mp1_traffic_imsi::setMecMacaddr(std::string const& value)
{
    m_Mec_macaddr = value;
    
}
int32_t Post_mp1_traffic_imsi::getType() const
{
    return m_Type;
}
void Post_mp1_traffic_imsi::setType(int32_t const value)
{
    m_Type = value;
    
}

}
}
}
}

