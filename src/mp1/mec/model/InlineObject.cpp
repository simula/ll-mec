/**
* MEC Platform
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_object.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_object::Inline_object()
{
    m_Url = "";
    m_Mec_ipaddr = "";
    m_Mec_macaddr = "";
    m_Mec_macaddrIsSet = false;
    m_Type = 0;
    
}

Inline_object::~Inline_object()
{
}

void Inline_object::validate()
{
    // TODO: implement validation
}

nlohmann::json Inline_object::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["url"] = ModelBase::toJson(m_Url);
    val["mec_ipaddr"] = ModelBase::toJson(m_Mec_ipaddr);
    if(m_Mec_macaddrIsSet)
    {
        val["mec_macaddr"] = ModelBase::toJson(m_Mec_macaddr);
    }
    val["type"] = m_Type;
    

    return val;
}

void Inline_object::fromJson(const nlohmann::json& val)
{
    setUrl(val.at("url"));
    setMecIpaddr(val.at("mec_ipaddr"));
    if(val.find("mec_macaddr") != val.end())
    {
        setMecMacaddr(val.at("mec_macaddr"));
    }
    setType(val.at("type"));
    
}


std::string Inline_object::getUrl() const
{
    return m_Url;
}
void Inline_object::setUrl(std::string const& value)
{
    m_Url = value;
    
}
std::string Inline_object::getMecIpaddr() const
{
    return m_Mec_ipaddr;
}
void Inline_object::setMecIpaddr(std::string const& value)
{
    m_Mec_ipaddr = value;
    
}
std::string Inline_object::getMecMacaddr() const
{
    return m_Mec_macaddr;
}
void Inline_object::setMecMacaddr(std::string const& value)
{
    m_Mec_macaddr = value;
    m_Mec_macaddrIsSet = true;
}
bool Inline_object::mecMacaddrIsSet() const
{
    return m_Mec_macaddrIsSet;
}
void Inline_object::unsetMec_macaddr()
{
    m_Mec_macaddrIsSet = false;
}
int32_t Inline_object::getType() const
{
    return m_Type;
}
void Inline_object::setType(int32_t const value)
{
    m_Type = value;
    
}

}
}
}
}

